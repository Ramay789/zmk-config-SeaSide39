#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        mac_btlayer: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 7 &bt BT_SEL 1>;
            label = "NEW_MACRO";
        };

        win_btlayer: win_btlayer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &bt BT_SEL 0>;
            label = "WIN_BTLAYER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        WIN {
            bindings = <
&lt 6 Q     &kp W         &kp E         &kp R                        &kp T                                                 &kp Y        &kp U  &lt 5 I    &kp O       &kp P
&kp A       &kp S         &kp D         &kp F                        &kp G                                                 &kp H        &kp J  &kp K      &kp L       &lt 4 MINUS
&kp Z       &kp X         &kp C         &kp V                        &kp B                                                 &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SINGLE_QUOTE
&kp ESCAPE  &kp LEFT_GUI  &kp LEFT_ALT  &mt LEFT_CONTROL LANGUAGE_2  &lt 1 SPACE  &mt LEFT_SHIFT LANG1      &kp BACKSPACE  &lt 2 ENTER                                &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp PRCNT  &kp DOLLAR  &kp AMPERSAND  &kp CARET        &kp FSLH                             &kp BSLH        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN  &kp GREATER_THAN
&kp AT     &kp HASH    &kp ASTERISK   &kp PLUS         &kp EQUAL                            &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI       &kp COLON
&kp GRAVE  &kp TILDE   &kp MINUS      &kp EXCLAMATION  &kp QUESTION                         &kp PIPE        &kp LBKT              &kp RBKT               &kp SQT        &kp DOUBLE_QUOTES
&trans     &trans      &trans         &trans           &trans        &trans      &kp COMMA  &kp PERIOD                                                                  &kp ESC
            >;
        };

        NUM_ARROW {
            bindings = <
&trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans                      &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp UP_ARROW    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET
&trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans                      &trans            &kp LEFT_ARROW        &kp DOWN_ARROW  &kp RIGHT_ARROW        &trans
&kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans                      &trans            &trans                &trans          &trans                 &trans
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &kp NUMBER_0                                                                   &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &mkp MB4                &kp UP_ARROW    &mkp MB5                 &trans                       &kp LG(LEFT_ARROW)          &kp LA(LEFT_ARROW)      &kp UP_ARROW    &kp RA(RIGHT_ARROW)      &kp RG(RIGHT_ARROW)
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END                      &kp LC(LS(TAB))             &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp RC(TAB)
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans                       &kp LA(LG(LC(LEFT_ARROW)))  &kp LA(LG(LEFT_ARROW))  &kp LA(LG(F))   &kp RG(RA(RIGHT_ARROW))  &kp RA(RC(RG(RIGHT_ARROW)))
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &kp BACKSPACE                                                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &mkp MB1  &mkp MB2  &mo 5   &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &kp ENTER  &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans                                            &trans            &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans  &kp LS(LG(N5))  &kp LS(LG(N4))      &kp LC(DOWN)  &kp LC(UP_ARROW)                          &trans
            >;
        };

        CONFIG {
            bindings = <
&none         &bt BT_CLR    &trans        &trans        &trans                            &trans       &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans                            &trans       &trans  &trans  &trans  &trans
&win_btlayer  &mac_btlayer  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &bootloader  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                               &trans
            >;
        };

        MAC {
            bindings = <
&kp Q       &kp W             &kp E         &kp R                    &kp T                                                    &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A       &kp S             &kp D         &kp F                    &kp G                                                    &kp H        &kp J  &kp K      &kp L    &lt 4 MINUS
&kp Z       &kp X             &kp C         &kp V                    &kp B                                                    &kp N        &kp M  &kp COMMA  &kp DOT  &kp APOS
&kp ESCAPE  &kp LEFT_CONTROL  &kp LEFT_ALT  &mt LEFT_GUI LANGUAGE_2  &kp SPACE  &mt LEFT_SHIFT LANGUAGE_1      &kp BACKSPACE  &lt 2 ENTER                             &kp FSLH
            >;
        };
    };
};
